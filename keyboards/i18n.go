package keyboards

import (
	"time"

	"github.com/ivanenkomaksym/remindme_bot/domain/entities"
)

var WeekdayNameToKeyMap = map[string]time.Weekday{
	"Mon": time.Monday,
	"Tue": time.Tuesday,
	"Wed": time.Wednesday,
	"Thu": time.Thursday,
	"Fri": time.Friday,
	"Sat": time.Saturday,
	"Sun": time.Sunday,
}

type Strings struct {
	Welcome                  string
	RecurrenceTypes          map[entities.RecurrenceType]string
	BtnBack                  string
	BtnCustomTime            string
	MsgSelectTime            string
	MsgSelectHour            string
	MsgSelectWithinHour      string
	MsgSelectMessage         string
	MsgEnterCustomTime       string
	MsgEnterCustomMessage    string
	MsgInvalidTimeFormat     string
	MsgInvalidIntervalFormat string
	BtnMyReminders           string
	NoReminders              string
	YourReminders            string
	BtnDelete                string
	DefaultMessages          []string
	ReminderSet              string
	Frequency                string
	Days                     string
	NoneSelected             string
	Date                     string
	Time                     string
	Message                  string
	ReminderScheduled        string
	At                       string
	// Week-related i18n
	WeekdayNames        map[time.Weekday]string
	WeekdayNamesShort   map[time.Weekday]string
	MsgSelectWeekdays   string
	MsgSelectTimeWeekly string
	BtnSelect           string
	// Date-related i18n
	MsgSelectDate string
	// Interval-related i18n
	MsgIntervalPrompt          string // e.g., "Every N days"
	MsgEveryNDays              string // e.g., "Every %d days"
	MsgEveryNDaysSpaced        string // e.g., "Every %s days"
	MsgParsingFailed           string
	MsgTimezoneAutoDetect      string
	MsgTimezoneAutoDetectDescr string
	MsgTimezoneSet             string
	// Navigation-related i18n
	NavList         string
	NavSetup        string
	NavAccount      string
	NavChooseOption string
	// Bot command descriptions
	CmdStartDesc   string
	CmdListDesc    string
	CmdSetupDesc   string
	CmdAccountDesc string
	// Account management i18n
	AccTitle          string
	AccUsername       string
	AccLanguage       string
	AccTimezone       string
	AccCreatedAt      string
	AccNoUsername     string
	AccNoTimezone     string
	AccChangeLanguage string
	AccChangeTimezone string
	// Timezone selection i18n
	TzManualSelect string
	TzSelectPrompt string
	// NLP text input i18n
	NlpMenuTitle        string
	NlpInstructions     string
	NlpExamples         string
	NlpEnterText        string
	BtnNlpTextInput     string
	NlpRateLimitFree    string
	NlpRateLimitBasic   string
	NlpRateLimitGeneral string
	NlpUsageTitle       string
	NlpUsageRemaining   string
	NlpUsageUnlimited   string
	NlpUpgradePremium   string
}

var stringsByLang = map[string]Strings{
	LangEN: {
		Welcome: "Welcome to the Reminder Bot!",
		RecurrenceTypes: map[entities.RecurrenceType]string{
			entities.Once:                  "üìÖ Once",
			entities.Daily:                 "üåÖ Daily",
			entities.Weekly:                "üìÜ Weekly",
			entities.Monthly:               "üóìÔ∏è Monthly",
			entities.Interval:              "‚è±Ô∏è Interval",
			entities.SpacedBasedRepetition: "üß† Spaced Repetition",
		},
		BtnBack:                  "üîô Back",
		BtnCustomTime:            "Custom",
		MsgSelectTime:            "Select time for daily reminders:",
		MsgSelectHour:            "Select time range:",
		MsgSelectWithinHour:      "Select time within %02d:00-%02d:00:",
		MsgSelectMessage:         "Select your reminder message:",
		MsgEnterCustomTime:       "Please type your custom time in HH:MM format (e.g., 14:30):",
		MsgEnterCustomMessage:    "Please type your custom reminder message:",
		MsgInvalidTimeFormat:     "Invalid time format.",
		MsgInvalidIntervalFormat: "Invalid interval format. Expected 1-7",
		BtnMyReminders:           "üìã My reminders",
		NoReminders:              "You have no reminders yet.",
		YourReminders:            "Your reminders:\n\n",
		BtnDelete:                "Delete",
		DefaultMessages: []string{"Time to take a break!",
			"Don't forget your medication",
			"Check your email",
			"Drink some water",
			"Stand up and stretch",
			"Review your tasks"},
		ReminderSet:       "Reminder Set",
		Frequency:         "Frequency",
		Days:              "Days",
		NoneSelected:      "None selected",
		Date:              "Date",
		Time:              "Time",
		Message:           "Message",
		ReminderScheduled: "Your reminder has been scheduled!",
		At:                "at",
		WeekdayNames: map[time.Weekday]string{
			time.Monday:    "Monday",
			time.Tuesday:   "Tuesday",
			time.Wednesday: "Wednesday",
			time.Thursday:  "Thursday",
			time.Friday:    "Friday",
			time.Saturday:  "Saturday",
			time.Sunday:    "Sunday",
		},
		WeekdayNamesShort: map[time.Weekday]string{
			time.Monday:    "Mon",
			time.Tuesday:   "Tue",
			time.Wednesday: "Wed",
			time.Thursday:  "Thu",
			time.Friday:    "Fri",
			time.Saturday:  "Sat",
			time.Sunday:    "Sun",
		},
		MsgSelectWeekdays:          "Select weekdays:",
		MsgSelectTimeWeekly:        "Select time for weekly reminders:",
		BtnSelect:                  "Select",
		MsgSelectDate:              "Select a date:",
		MsgIntervalPrompt:          "Every N days",
		MsgEveryNDays:              "Every %d days",
		MsgEveryNDaysSpaced:        "Every %s days",
		MsgParsingFailed:           "I didn't understand that. Please use the menu buttons.",
		MsgTimezoneAutoDetect:      "üåç Set Timezone Automatically",
		MsgTimezoneAutoDetectDescr: "Click the button to detect your timezone.",
		MsgTimezoneSet:             "‚úÖ Your timezone is set to",
		NavList:                    "Show reminders",
		NavSetup:                   "Setup reminder",
		NavAccount:                 "Account",
		NavChooseOption:            "Choose an option:",
		CmdStartDesc:               "Start the bot and show main menu",
		CmdListDesc:                "Show or remove reminders",
		CmdSetupDesc:               "Set up time, recurrence, and reminder settings",
		CmdAccountDesc:             "Manage account settings",

		// NLP-related strings
		NlpMenuTitle:        "ü§ñ Smart Text Reminder",
		NlpInstructions:     "Just tell me what you want to be reminded about in plain language! I'll understand the time, recurrence, and message automatically.",
		NlpExamples:         "üìù Examples:\n‚Ä¢ \"Remind me to call mom tomorrow at 6 PM\"\n‚Ä¢ \"Meeting with team every Monday at 9 AM\"\n‚Ä¢ \"Take medication daily at 8:30\"\n‚Ä¢ \"Dentist appointment next Friday at 2 PM\"",
		NlpEnterText:        "üí¨ Enter your reminder in plain text:",
		BtnNlpTextInput:     "üìù Create from Text",
		NlpRateLimitFree:    "‚ö†Ô∏è You've reached your monthly limit of %d AI text reminders.\n\nüåü Upgrade to Premium for %d requests per month!\n\n‚è∞ Free limit resets in %d days.",
		NlpRateLimitBasic:   "‚ö†Ô∏è You've reached your monthly limit of %d AI text reminders.\n\n‚ú® Upgrade to Pro for unlimited requests!\n\n‚è∞ Limit resets in %d days.",
		NlpRateLimitGeneral: "‚ö†Ô∏è AI text reminder limit reached. Please try again later.",
		NlpUsageTitle:       "ü§ñ AI Text Reminders",
		NlpUsageRemaining:   "üìä Usage: %d/%d requests this month",
		NlpUsageUnlimited:   "üìä Usage: %d requests (Unlimited)",
		NlpUpgradePremium:   "üåü Upgrade to Premium",
		AccTitle:            "üë§ Account Information",
		AccUsername:         "Username",
		AccLanguage:         "Language",
		AccTimezone:         "Timezone",
		AccCreatedAt:        "Created",
		AccNoUsername:       "Not set",
		AccNoTimezone:       "Not set",
		AccChangeLanguage:   "üåê Change Language",
		AccChangeTimezone:   "üåç Change Timezone",
		TzManualSelect:      "üìç Select Manually",
		TzSelectPrompt:      "Select your timezone:",
	},
	LangUK: {
		Welcome: "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –±–æ—Ç–∞-–Ω–∞–≥–∞–¥—É–≤–∞—á–∞!",
		RecurrenceTypes: map[entities.RecurrenceType]string{
			entities.Once:                  "üìÖ –û–¥–∏–Ω —Ä–∞–∑",
			entities.Daily:                 "üåÖ –©–æ–¥–Ω—è",
			entities.Weekly:                "üìÜ –©–æ—Ç–∏–∂–Ω—è",
			entities.Monthly:               "üóìÔ∏è –©–æ–º—ñ—Å—è—Ü—è",
			entities.Interval:              "‚è±Ô∏è –Ü–Ω—Ç–µ—Ä–≤–∞–ª",
			entities.SpacedBasedRepetition: "üß† –Ü–Ω—Ç–µ—Ä–≤–∞–ª –∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è–º",
		},
		BtnBack:                  "üîô –ù–∞–∑–∞–¥",
		BtnCustomTime:            "–°–≤—ñ–π —á–∞—Å",
		MsgSelectTime:            "–û–±–µ—Ä—ñ—Ç—å —á–∞—Å –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å:",
		MsgSelectHour:            "–û–±–µ—Ä—ñ—Ç—å –¥—ñ–∞–ø–∞–∑–æ–Ω —á–∞—Å—É:",
		MsgSelectWithinHour:      "–û–±–µ—Ä—ñ—Ç—å —á–∞—Å –º—ñ–∂ %02d:00-%02d:00:",
		MsgSelectMessage:         "–û–±–µ—Ä—ñ—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è:",
		MsgEnterCustomTime:       "–í–≤–µ–¥—ñ—Ç—å —á–∞—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ HH:MM (–Ω–∞–ø—Ä., 14:30):",
		MsgEnterCustomMessage:    "–í–≤–µ–¥—ñ—Ç—å –≤–ª–∞—Å–Ω–∏–π —Ç–µ–∫—Å—Ç –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è:",
		MsgInvalidTimeFormat:     "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —á–∞—Å—É.",
		MsgInvalidIntervalFormat: "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É. –û—á—ñ–∫—É—î—Ç—å—Å—è 1-7",
		BtnMyReminders:           "üìã –ú–æ—ó –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è",
		NoReminders:              "–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å.",
		YourReminders:            "–í–∞—à—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è:\n\n",
		BtnDelete:                "–í–∏–¥–∞–ª–∏—Ç–∏",
		DefaultMessages: []string{"–ß–∞—Å –∑—Ä–æ–±–∏—Ç–∏ –ø–µ—Ä–µ—Ä–≤—É!",
			"–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–∏–π–Ω—è—Ç–∏ –ª—ñ–∫–∏",
			"–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–≤–æ—é –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É",
			"–í–∏–ø–∏–π—Ç–µ —Ç—Ä–æ—Ö–∏ –≤–æ–¥–∏",
			"–í—Å—Ç–∞–Ω—å—Ç–µ —ñ —Ä–æ–∑—ñ–º–Ω—ñ—Ç—å—Å—è",
			"–ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ —Å–≤–æ—ó –∑–∞–≤–¥–∞–Ω–Ω—è"},
		ReminderSet:       "–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
		Frequency:         "–ß–∞—Å—Ç–æ—Ç–∞",
		Days:              "–î–Ω—ñ",
		NoneSelected:      "–ù—ñ—á–æ–≥–æ –Ω–µ –≤–∏–±—Ä–∞–Ω–æ",
		Date:              "–î–∞—Ç–∞",
		Time:              "–ß–∞—Å",
		Message:           "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è",
		ReminderScheduled: "–í–∞—à–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ!",
		At:                "–≤",
		WeekdayNames: map[time.Weekday]string{
			time.Monday:    "–ü–æ–Ω–µ–¥—ñ–ª–æ–∫",
			time.Tuesday:   "–í—ñ–≤—Ç–æ—Ä–æ–∫",
			time.Wednesday: "–°–µ—Ä–µ–¥–∞",
			time.Thursday:  "–ß–µ—Ç–≤–µ—Ä",
			time.Friday:    "–ü'—è—Ç–Ω–∏—Ü—è",
			time.Saturday:  "–°—É–±–æ—Ç–∞",
			time.Sunday:    "–ù–µ–¥—ñ–ª—è",
		},
		WeekdayNamesShort: map[time.Weekday]string{
			time.Monday:    "–ü–Ω",
			time.Tuesday:   "–í—Ç",
			time.Wednesday: "–°—Ä",
			time.Thursday:  "–ß—Ç",
			time.Friday:    "–ü—Ç",
			time.Saturday:  "–°–±",
			time.Sunday:    "–ù–¥",
		},
		MsgSelectWeekdays:          "–û–±–µ—Ä—ñ—Ç—å –¥–Ω—ñ —Ç–∏–∂–Ω—è:",
		MsgSelectTimeWeekly:        "–û–±–µ—Ä—ñ—Ç—å —á–∞—Å –¥–ª—è —â–æ—Ç–∏–∂–Ω–µ–≤–∏—Ö –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å:",
		BtnSelect:                  "–û–±—Ä–∞—Ç–∏",
		MsgSelectDate:              "–û–±–µ—Ä—ñ—Ç—å –¥–∞—Ç—É:",
		MsgIntervalPrompt:          "–ö–æ–∂–Ω—ñ N –¥–Ω—ñ–≤",
		MsgEveryNDays:              "–ö–æ–∂–Ω—ñ %d –¥–Ω—ñ–≤",
		MsgEveryNDaysSpaced:        "–ö–æ–∂–Ω—ñ %s –¥–Ω—ñ–≤",
		MsgParsingFailed:           "–Ø –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é.",
		MsgTimezoneAutoDetect:      "üåç –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å",
		MsgTimezoneAutoDetectDescr: "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É, —â–æ–± –≤–∏–∑–Ω–∞—á–∏—Ç–∏ —Å–≤—ñ–π —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å.",
		MsgTimezoneSet:             "‚úÖ –ß–∞—Å–æ–≤–∏–π –ø–æ—è—Å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞",
		NavList:                    "–ü–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è",
		NavSetup:                   "–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è",
		NavAccount:                 "–ê–∫–∞—É–Ω—Ç",
		NavChooseOption:            "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:",
		CmdStartDesc:               "–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞ —Ç–∞ –ø–æ–∫–∞–∑–∞—Ç–∏ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é",
		CmdListDesc:                "–ü–æ–∫–∞–∑–∞—Ç–∏ –∞–±–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è",
		CmdSetupDesc:               "–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —á–∞—Å, –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è —Ç–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å",
		CmdAccountDesc:             "–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ –∞–∫–∞—É–Ω—Ç—É",

		// NLP-related strings
		NlpMenuTitle:        "ü§ñ –†–æ–∑—É–º–Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è",
		NlpInstructions:     "–ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂—ñ—Ç—å –º–µ–Ω—ñ, —â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ, —â–æ–± —è –Ω–∞–≥–∞–¥–∞–≤, –∑–≤–∏—á–∞–π–Ω–æ—é –º–æ–≤–æ—é! –Ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑—Ä–æ–∑—É–º—ñ—é —á–∞—Å, –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.",
		NlpExamples:         "üìù –ü—Ä–∏–∫–ª–∞–¥–∏:\n‚Ä¢ \"–ù–∞–≥–∞–¥–∞–π –º–µ–Ω—ñ –ø–æ–¥–∑–≤–æ–Ω–∏—Ç–∏ –º–∞–º—ñ –∑–∞–≤—Ç—Ä–∞ –æ 18:00\"\n‚Ä¢ \"–ó—É—Å—Ç—Ä—ñ—á –∑ –∫–æ–º–∞–Ω–¥–æ—é —â–æ–ø–æ–Ω–µ–¥—ñ–ª–∫–∞ –æ 9:00\"\n‚Ä¢ \"–ü—Ä–∏–π–º–∞—Ç–∏ –ª—ñ–∫–∏ —â–æ–¥–Ω—è –æ 8:30\"\n‚Ä¢ \"–ü—Ä–∏–π–æ–º —É —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –ø'—è—Ç–Ω–∏—Ü—ñ –æ 14:00\"",
		NlpEnterText:        "üí¨ –í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑–≤–∏—á–∞–π–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º:",
		BtnNlpTextInput:     "üìù –°—Ç–≤–æ—Ä–∏—Ç–∏ –∑ —Ç–µ–∫—Å—Ç—É",
		NlpRateLimitFree:    "‚ö†Ô∏è –í–∏ –¥–æ—Å—è–≥–ª–∏ –º—ñ—Å—è—á–Ω–æ–≥–æ –ª—ñ–º—ñ—Ç—É %d –®–Ü —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å.\n\nüåü –û–Ω–æ–≤—ñ—Ç—å—Å—è –¥–æ –ü—Ä–µ–º—ñ—É–º –¥–ª—è %d –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –º—ñ—Å—è—Ü—å!\n\n‚è∞ –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –ª—ñ–º—ñ—Ç –æ–Ω–æ–≤–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ %d –¥–Ω—ñ–≤.",
		NlpRateLimitBasic:   "‚ö†Ô∏è –í–∏ –¥–æ—Å—è–≥–ª–∏ –º—ñ—Å—è—á–Ω–æ–≥–æ –ª—ñ–º—ñ—Ç—É %d –®–Ü —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å.\n\n‚ú® –û–Ω–æ–≤—ñ—Ç—å—Å—è –¥–æ –ü—Ä–æ –¥–ª—è –Ω–µ–æ–±–º–µ–∂–µ–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤!\n\n‚è∞ –õ—ñ–º—ñ—Ç –æ–Ω–æ–≤–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ %d –¥–Ω—ñ–≤.",
		NlpRateLimitGeneral: "‚ö†Ô∏è –õ—ñ–º—ñ—Ç –®–Ü —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –¥–æ—Å—è–≥–Ω—É—Ç–æ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.",
		NlpUsageTitle:       "ü§ñ –®–Ü –¢–µ–∫—Å—Ç–æ–≤—ñ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è",
		NlpUsageRemaining:   "üìä –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: %d/%d –∑–∞–ø–∏—Ç—ñ–≤ —Ü—å–æ–≥–æ –º—ñ—Å—è—Ü—è",
		NlpUsageUnlimited:   "üìä –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: %d –∑–∞–ø–∏—Ç—ñ–≤ (–ù–µ–æ–±–º–µ–∂–µ–Ω–æ)",
		NlpUpgradePremium:   "üåü –û–Ω–æ–≤–∏—Ç–∏ –¥–æ –ü—Ä–µ–º—ñ—É–º",
		AccTitle:            "üë§ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–∞—Ö—É–Ω–æ–∫",
		AccUsername:         "–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
		AccLanguage:         "–ú–æ–≤–∞",
		AccTimezone:         "–ß–∞—Å–æ–≤–∏–π –ø–æ—è—Å",
		AccCreatedAt:        "–°—Ç–≤–æ—Ä–µ–Ω–æ",
		AccNoUsername:       "–ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
		AccNoTimezone:       "–ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
		AccChangeLanguage:   "üåê –ó–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É",
		AccChangeTimezone:   "üåç –ó–º—ñ–Ω–∏—Ç–∏ —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å",
		TzManualSelect:      "üìç –û–±—Ä–∞—Ç–∏ –≤—Ä—É—á–Ω—É",
		TzSelectPrompt:      "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å:",
	},
}

func T(lang string) Strings {
	if s, ok := stringsByLang[lang]; ok {
		return s
	}
	return stringsByLang[LangEN]
}

// RecurrenceTypeLabel returns a localized string for a given recurrence type.
// Falls back to the enum String() if translation is missing.
func RecurrenceTypeLabel(lang string, rt entities.RecurrenceType) string {
	s := T(lang)
	if s.RecurrenceTypes != nil {
		if v, ok := s.RecurrenceTypes[rt]; ok {
			return v
		}
	}
	return rt.String()
}
